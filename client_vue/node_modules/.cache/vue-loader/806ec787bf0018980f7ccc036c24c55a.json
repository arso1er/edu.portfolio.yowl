{"remainingRequest":"/app/node_modules/vue-loader-v16/dist/index.js??ref--1-2!/app/src/components/Comments/ShowSite.vue?vue&type=style&index=0&id=82024b82&lang=scss&scoped=true","dependencies":[{"path":"/app/src/components/Comments/ShowSite.vue","mtime":1641198370373},{"path":"/app/node_modules/css-loader/dist/cjs.js","mtime":1640299653765},{"path":"/app/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1640299655523},{"path":"/app/node_modules/postcss-loader/src/index.js","mtime":1640299654911},{"path":"/app/node_modules/sass-loader/dist/cjs.js","mtime":1640775293299},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js","mtime":1640775278388},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/vue-loader-v16/dist/index.js","mtime":1640299655523}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8vIC55bC1tYy1jYXJkIHsKLy8gICB3aWR0aDogZml0LWNvbnRlbnQ7Ci8vICAgbWFyZ2luOiAwIGF1dG87Ci8vIH0K"},{"version":3,"sources":["/app/src/components/Comments/ShowSite.vue"],"names":[],"mappings":";AA4IA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACf,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,EAAE","file":"/app/src/components/Comments/ShowSite.vue","sourceRoot":"","sourcesContent":["<template>\n  <q-page padding :style-fn=\"resetHeight\" class=\"bg-secondary\">\n    <q-spinner-audio\n      v-if=\"!mounted\"\n      class=\"fixed-center\"\n      color=\"white\"\n      size=\"4em\"\n    />\n    <Container style=\"max-width: 700px\" v-if=\"mounted && comments.length\">\n      <q-card class=\"q-mt-lg\">\n        <q-card-section class=\"row items-center\">\n          <div class=\"col\">\n            <div>\n              <div class=\"text-bold yl-lu text-h6\">\n                {{ comments[0].site_name }}\n                ({{ total }} comment<span v-if=\"total > 1\">s</span>)\n              </div>\n            </div>\n            <div class=\"row items-center justify-between\">\n              <div class=\"row items-center\">\n                <q-rating\n                  size=\"2em\"\n                  icon=\"star_border\"\n                  icon-selected=\"star\"\n                  readonly\n                  :modelValue=\"+avgRating\"\n                  :color=\"getColor(+avgRating)\"\n                />\n                <span class=\"q-ml-sm\">\n                  ({{ +(+avgRating).toFixed(1) }} average)\n                </span>\n              </div>\n              <a\n                :href=\"\n                  comments[0].site_link.startsWith('http')\n                    ? comments[0].site_link\n                    : 'http://' + comments[0].site_link\n                \"\n                target=\"_blank\"\n                class=\"text-grey text-bold yl-lu\"\n              >\n                Visit {{ comments[0].site_link }}\n              </a>\n            </div>\n          </div>\n        </q-card-section>\n\n        <q-separator inset v-if=\"$store.state.user\" />\n\n        <q-card-section class=\"row items-center\" v-if=\"$store.state.user\">\n          <q-avatar>\n            <img\n              :src=\"$store.state.env.apiBaseUrl + $store.state.user.picture\"\n            />\n          </q-avatar>\n          <div class=\"q-ml-sm col\">\n            <div>\n              <div class=\"text-bold\">\n                {{ $store.state.user.name }}\n              </div>\n            </div>\n            <div class=\"row items-center justify-between\">\n              <router-link\n                :to=\"`/comments/add?site_link=${comments[0].site_link}&site_name=${comments[0].site_name}`\"\n                class=\"text-accent yl-lu\"\n              >\n                Write a review\n              </router-link>\n              <q-rating\n                size=\"2em\"\n                icon=\"star_border\"\n                icon-selected=\"star\"\n                :model-value=\"addRating\"\n                @update:model-value=\"addRatingUpd\"\n                :max=\"5\"\n                color=\"green\"\n                no-dimming\n              />\n            </div>\n          </div>\n        </q-card-section>\n      </q-card>\n\n      <q-card class=\"q-mt-lg\" v-for=\"comment in comments\" :key=\"comment.id\">\n        <q-card-section class=\"row items-center\">\n          <q-avatar>\n            <img :src=\"$store.state.env.apiBaseUrl + comment.userPicture\" />\n          </q-avatar>\n          <div class=\"q-ml-sm col\">\n            <div>\n              <router-link\n                :to=\"`/users/${comment.user_id}`\"\n                class=\"text-bold yl-lu\"\n                >{{ comment.userName }}</router-link\n              >\n            </div>\n            <div class=\"row items-center justify-between\">\n              <q-rating\n                size=\"2em\"\n                icon=\"star_border\"\n                icon-selected=\"star\"\n                readonly\n                :modelValue=\"comment.rating\"\n                :color=\"getColor(comment.rating)\"\n              />\n              <div class=\"text-grey\">{{ getDate(comment.created_at) }}</div>\n            </div>\n          </div>\n        </q-card-section>\n\n        <q-separator inset />\n\n        <q-card-section>\n          <router-link\n            :to=\"`/comments/${comment.id}`\"\n            class=\"text-bold q-pb-sm yl-lu\"\n          >\n            {{ comment.title }}\n          </router-link>\n          <div v-html=\"comment.content\" />\n        </q-card-section>\n      </q-card>\n\n      <Pagination\n        v-if=\"totalPages > 1\"\n        :page=\"+page\"\n        :totalPages=\"totalPages\"\n        :limit=\"5\"\n        :link=\"`/sites/${$route.params.link}`\"\n      />\n    </Container>\n    <Container style=\"max-width: 700px\" v-if=\"mounted && !comments.length\">\n      <div class=\"text-bold text-h5 q-mb-md text-center\">\n        No one has commented on \"{{ $route.params.link }}\" yet.\n      </div>\n    </Container>\n  </q-page>\n</template>\n\n<style lang=\"scss\" scoped>\n// .yl-mc-card {\n//   width: fit-content;\n//   margin: 0 auto;\n// }\n</style>\n\n<script>\nimport Container from \"@/components/Container.vue\";\nimport { getRatingColor } from \"@/utils\";\n// import UsersAPI from \"@/api/users\";\nimport CommentsAPI from \"@/api/comments\";\n// import Error404 from \"@/views/Error404.vue\";\nimport Pagination from \"@/components/Comments/Pagination\";\n\nexport default {\n  name: \"MyCommentsComponent\",\n  data() {\n    return {\n      mounted: false,\n      //   user: null,\n      comments: [],\n      page: 1,\n      perPage: 10,\n      total: 0,\n      totalPages: 0,\n      avgRating: 0,\n      addRating: 0,\n    };\n  },\n  components: {\n    Container,\n    // Error404,\n    Pagination,\n  },\n  methods: {\n    resetHeight(offset) {\n      return { minHeight: `calc(100vh - ${(offset || 0) + 70}px)` };\n    },\n    getColor(rate) {\n      return getRatingColor(rate);\n    },\n    getDate(str) {\n      const date = new Date(str);\n      const dateOptions = {\n        // weekday: \"long\",\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      };\n      return date.toLocaleDateString(\"en-US\", dateOptions);\n    },\n    addRatingUpd(val) {\n      this.addRating = val;\n      return this.$router.push(\n        `/comments/add?site_link=${this.comments[0].site_link}&site_name=${this.comments[0].site_name}&rating=${val}`\n      );\n    },\n  },\n  watch: {\n    // https://stackoverflow.com/a/50981093\n    \"$route.query.page\": {\n      handler: async function (page) {\n        if (this.$route.name !== \"ShowSite\") return; // to prevent error when quitting this page.\n\n        this.mounted = false;\n        try {\n          const siteLink = this.$route.params.link;\n\n          this.page = page || 1;\n          const commentRes = await CommentsAPI.index({\n            site: siteLink,\n            page: this.page,\n          });\n          this.comments = commentRes.comments;\n          this.perPage = commentRes.perPage;\n          this.total = commentRes.total;\n          this.totalPages = commentRes.totalPages;\n\n          const avgRes = await CommentsAPI.search({\n            site: siteLink,\n            page: this.page,\n          });\n          this.avgRating = avgRes.comments[0].rating_avg;\n\n          this.mounted = true;\n          // console.log(commentRes);\n        } catch (error) {\n          // window.err = error;\n          this.mounted = true;\n        }\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n};\n</script>\n"]}]}