{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/quasar/src/composables/private/use-file.js","dependencies":[{"path":"/app/node_modules/quasar/src/composables/private/use-file.js","mtime":1640775238786},{"path":"/app/babel.config.js","mtime":1641166691245},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/app/node_modules/quasar/src/composables/private/use-file.js"],"names":["h","computed","getCurrentInstance","stop","stopAndPrevent","filterFiles","files","rejectedFiles","failedPropValidation","filterFn","acceptedFiles","forEach","file","push","stopAndPreventDrag","e","dataTransfer","dropEffect","useFileProps","multiple","Boolean","accept","String","capture","maxFileSize","Number","maxTotalSize","maxFiles","filter","Function","useFileEmits","editable","dnd","getFileInput","addFilesToQueue","props","emit","proxy","extensions","split","map","ext","trim","endsWith","slice","length","toUpperCase","maxFilesNumber","parseInt","maxTotalSizeNumber","pickFiles","value","Object","target","matches","clientX","clientY","input","click","addFiles","processFiles","filesToProcess","currentFileList","append","Array","from","done","indexOf","some","type","startsWith","name","size","__key","webkitRelativePath","lastModified","filenameMap","entry","includes","reduce","total","filteredFiles","filesNumber","onDragover","onDragleave","onDrop","getDndNode","class","onDragenter","assign"],"mappings":"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","sourcesContent":["import { h, computed, getCurrentInstance } from 'vue'\n\nimport { stop, stopAndPrevent } from '../../utils/event.js'\n\nfunction filterFiles (files, rejectedFiles, failedPropValidation, filterFn) {\n  const acceptedFiles = []\n\n  files.forEach(file => {\n    if (filterFn(file) === true) {\n      acceptedFiles.push(file)\n    }\n    else {\n      rejectedFiles.push({ failedPropValidation, file })\n    }\n  })\n\n  return acceptedFiles\n}\n\nfunction stopAndPreventDrag (e) {\n  e && e.dataTransfer && (e.dataTransfer.dropEffect = 'copy')\n  stopAndPrevent(e)\n}\n\nexport const useFileProps = {\n  multiple: Boolean,\n  accept: String,\n  capture: String,\n  maxFileSize: [ Number, String ],\n  maxTotalSize: [ Number, String ],\n  maxFiles: [ Number, String ],\n  filter: Function\n}\n\nexport const useFileEmits = [ 'rejected' ]\n\nexport default function ({\n  editable,\n  dnd,\n  getFileInput,\n  addFilesToQueue\n}) {\n  const { props, emit, proxy } = getCurrentInstance()\n\n  const extensions = computed(() => (\n    props.accept !== void 0\n      ? props.accept.split(',').map(ext => {\n          ext = ext.trim()\n          if (ext === '*') { // support \"*\"\n            return '*/'\n          }\n          else if (ext.endsWith('/*')) { // support \"image/*\" or \"*/*\"\n            ext = ext.slice(0, ext.length - 1)\n          }\n          return ext.toUpperCase()\n        })\n      : null\n  ))\n\n  const maxFilesNumber = computed(() => parseInt(props.maxFiles, 10))\n  const maxTotalSizeNumber = computed(() => parseInt(props.maxTotalSize, 10))\n\n  function pickFiles (e) {\n    if (editable.value) {\n      if (e !== Object(e)) {\n        e = { target: null }\n      }\n\n      if (e.target !== null && e.target.matches('input[type=\"file\"]') === true) {\n        // stop propagation if it's not a real pointer event\n        e.clientX === 0 && e.clientY === 0 && stop(e)\n      }\n      else {\n        const input = getFileInput()\n        input && input !== e.target && input.click(e)\n      }\n    }\n  }\n\n  function addFiles (files) {\n    if (editable.value && files) {\n      addFilesToQueue(null, files)\n    }\n  }\n\n  function processFiles (e, filesToProcess, currentFileList, append) {\n    let files = Array.from(filesToProcess || e.target.files)\n    const rejectedFiles = []\n\n    const done = () => {\n      if (rejectedFiles.length > 0) {\n        emit('rejected', rejectedFiles)\n      }\n    }\n\n    // filter file types\n    if (props.accept !== void 0 && extensions.value.indexOf('*/') === -1) {\n      files = filterFiles(files, rejectedFiles, 'accept', file => {\n        return extensions.value.some(ext => (\n          file.type.toUpperCase().startsWith(ext)\n          || file.name.toUpperCase().endsWith(ext)\n        ))\n      })\n\n      if (files.length === 0) { return done() }\n    }\n\n    // filter max file size\n    if (props.maxFileSize !== void 0) {\n      const maxFileSize = parseInt(props.maxFileSize, 10)\n      files = filterFiles(files, rejectedFiles, 'max-file-size', file => {\n        return file.size <= maxFileSize\n      })\n\n      if (files.length === 0) { return done() }\n    }\n\n    // Cordova/iOS allows selecting multiple files even when the\n    // multiple attribute is not specified. We also normalize drag'n'dropped\n    // files here:\n    if (props.multiple !== true) {\n      files = [ files[ 0 ] ]\n    }\n\n    // Compute key to use for each file\n    files.forEach(file => {\n      file.__key = file.webkitRelativePath + file.lastModified + file.name + file.size\n    })\n\n    // Avoid duplicate files\n    const filenameMap = currentFileList.map(entry => entry.__key)\n    files = filterFiles(files, rejectedFiles, 'duplicate', file => {\n      return filenameMap.includes(file.__key) === false\n    })\n\n    if (files.length === 0) { return done() }\n\n    if (props.maxTotalSize !== void 0) {\n      let size = append === true\n        ? currentFileList.reduce((total, file) => total + file.size, 0)\n        : 0\n\n      files = filterFiles(files, rejectedFiles, 'max-total-size', file => {\n        size += file.size\n        return size <= maxTotalSizeNumber.value\n      })\n\n      if (files.length === 0) { return done() }\n    }\n\n    // do we have custom filter function?\n    if (typeof props.filter === 'function') {\n      const filteredFiles = props.filter(files)\n      files = filterFiles(files, rejectedFiles, 'filter', file => {\n        return filteredFiles.includes(file)\n      })\n    }\n\n    if (props.maxFiles !== void 0) {\n      let filesNumber = append === true\n        ? currentFileList.length\n        : 0\n\n      files = filterFiles(files, rejectedFiles, 'max-files', () => {\n        filesNumber++\n        return filesNumber <= maxFilesNumber.value\n      })\n\n      if (files.length === 0) { return done() }\n    }\n\n    done()\n\n    if (files.length > 0) {\n      return files\n    }\n  }\n\n  function onDragover (e) {\n    stopAndPreventDrag(e)\n    dnd.value !== true && (dnd.value = true)\n  }\n\n  function onDragleave (e) {\n    stopAndPrevent(e)\n    dnd.value = false\n  }\n\n  function onDrop (e) {\n    stopAndPreventDrag(e)\n    const files = e.dataTransfer.files\n\n    if (files.length > 0) {\n      addFilesToQueue(null, files)\n    }\n\n    dnd.value = false\n  }\n\n  function getDndNode (type) {\n    if (dnd.value === true) {\n      return h('div', {\n        class: `q-${ type }__dnd absolute-full`,\n        onDragenter: stopAndPreventDrag,\n        onDragover: stopAndPreventDrag,\n        onDragleave,\n        onDrop\n      })\n    }\n  }\n\n  // expose public methods\n  Object.assign(proxy, { pickFiles, addFiles })\n\n  return {\n    pickFiles,\n    addFiles,\n    onDragover,\n    processFiles,\n    getDndNode,\n    maxFilesNumber,\n    maxTotalSizeNumber\n  }\n}\n"]}]}