{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/eslint-loader/index.js??ref--14-0!/app/src/store/actions.js","dependencies":[{"path":"/app/src/store/actions.js","mtime":1641233721838},{"path":"/app/babel.config.js","mtime":1641198370373},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388},{"path":"/app/node_modules/eslint-loader/index.js","mtime":1640299642556}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQXV0aEFQSSBmcm9tICJAL2FwaS9hdXRoIjsKaW1wb3J0IENvbW1lbnRzQVBJIGZyb20gIkAvYXBpL2NvbW1lbnRzIjsKZXhwb3J0IGRlZmF1bHQgewogIGxvYWRFbnY6IGZ1bmN0aW9uIGxvYWRFbnYoX3JlZikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgY29tbWl0KCJsb2FkRW52Iik7CiAgICByZXR1cm4gdHJ1ZTsKICB9LAogIGxvYWRVc2VyOiBmdW5jdGlvbiBsb2FkVXNlcihfcmVmMikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIGNvbW1pdCgibG9hZFVzZXIiKTsKICAgIHJldHVybiB0cnVlOwogIH0sCiAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKF9yZWYzLCBkYXRhKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXMsIHVzZXI7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIEF1dGhBUEkucmVnaXN0ZXIoZGF0YSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICB1c2VyID0gX29iamVjdFNwcmVhZCh7CiAgICAgICAgICAgICAgICB0b2tlbjogcmVzLnRva2VuCiAgICAgICAgICAgICAgfSwgcmVzLnVzZXIpOwogICAgICAgICAgICAgIGNvbW1pdCgibG9naW4iLCB1c2VyKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB1c2VyKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmNCwgZGF0YSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlcywgdXNlcjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBdXRoQVBJLmxvZ2luKGRhdGEpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgIHVzZXIgPSBfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgICAgICAgIHRva2VuOiByZXMudG9rZW4KICAgICAgICAgICAgICB9LCByZXMudXNlcik7CiAgICAgICAgICAgICAgY29tbWl0KCJsb2dpbiIsIHVzZXIpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCB1c2VyKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjUpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBBdXRoQVBJLmxvZ291dCgpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDY7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIGNvbW1pdCgibG9nb3V0Iik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHRydWUpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDZdXSk7CiAgICB9KSkoKTsKICB9LAogIGNyZWF0ZUNvbW1lbnQ6IGZ1bmN0aW9uIGNyZWF0ZUNvbW1lbnQoX3JlZjYsIGRhdGEpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgY29tbWl0LCByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gQ29tbWVudHNBUEkuY3JlYXRlKGRhdGEpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/app/src/store/actions.js"],"names":["AuthAPI","CommentsAPI","loadEnv","commit","loadUser","register","data","res","user","token","login","logout","createComment","create"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,eAAe;AACbC,EAAAA,OADa,yBACO;AAAA,QAAVC,MAAU,QAAVA,MAAU;AAClBA,IAAAA,MAAM,CAAC,SAAD,CAAN;AACA,WAAO,IAAP;AACD,GAJY;AAKbC,EAAAA,QALa,2BAKQ;AAAA,QAAVD,MAAU,SAAVA,MAAU;AACnBA,IAAAA,MAAM,CAAC,UAAD,CAAN;AACA,WAAO,IAAP;AACD,GARY;AASPE,EAAAA,QATO,2BAScC,IATd,EASoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBH,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACbH,OAAO,CAACK,QAAR,CAAiBC,IAAjB,CADa;;AAAA;AACzBC,cAAAA,GADyB;AAEzBC,cAAAA,IAFyB;AAEhBC,gBAAAA,KAAK,EAAEF,GAAG,CAACE;AAFK,iBAEKF,GAAG,CAACC,IAFT;AAG/BL,cAAAA,MAAM,CAAC,OAAD,EAAUK,IAAV,CAAN;AAH+B,+CAIxBA,IAJwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhC,GAdY;AAePE,EAAAA,KAfO,wBAeWJ,IAfX,EAeiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBH,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBACVH,OAAO,CAACU,KAAR,CAAcJ,IAAd,CADU;;AAAA;AACtBC,cAAAA,GADsB;AAEtBC,cAAAA,IAFsB;AAEbC,gBAAAA,KAAK,EAAEF,GAAG,CAACE;AAFE,iBAEQF,GAAG,CAACC,IAFZ;AAG5BL,cAAAA,MAAM,CAAC,OAAD,EAAUK,IAAV,CAAN;AAH4B,gDAIrBA,IAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAK7B,GApBY;AAqBPG,EAAAA,MArBO,yBAqBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVR,cAAAA,MAAU,SAAVA,MAAU;AAAA;AAAA;AAAA,qBAEfH,OAAO,CAACW,MAAR,EAFe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAMvBR,cAAAA,MAAM,CAAC,QAAD,CAAN;AANuB,gDAOhB,IAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQxB,GA7BY;AA+BPS,EAAAA,aA/BO,gCA+BmBN,IA/BnB,EA+ByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBH,cAAAA,MAAgB,SAAhBA,MAAgB;AAAA;AAAA,qBAClBF,WAAW,CAACY,MAAZ,CAAmBP,IAAnB,CADkB;;AAAA;AAC9BC,cAAAA,GAD8B;AAAA,gDAG7BA,GAH6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIrC;AAnCY,CAAf","sourcesContent":["import AuthAPI from \"@/api/auth\";\nimport CommentsAPI from \"@/api/comments\";\n\nexport default {\n  loadEnv({ commit }) {\n    commit(\"loadEnv\");\n    return true;\n  },\n  loadUser({ commit }) {\n    commit(\"loadUser\");\n    return true;\n  },\n  async register({ commit }, data) {\n    const res = await AuthAPI.register(data);\n    const user = { token: res.token, ...res.user };\n    commit(\"login\", user);\n    return user;\n  },\n  async login({ commit }, data) {\n    const res = await AuthAPI.login(data);\n    const user = { token: res.token, ...res.user };\n    commit(\"login\", user);\n    return user;\n  },\n  async logout({ commit }) {\n    try {\n      await AuthAPI.logout();\n    } catch (error) {\n      // Silent fail\n    }\n    commit(\"logout\");\n    return true;\n  },\n\n  async createComment({ commit }, data) {\n    const res = await CommentsAPI.create(data);\n    // console.log(res);\n    return res;\n  },\n};\n"]}]}