{"remainingRequest":"/app/node_modules/thread-loader/dist/cjs.js!/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/quasar/src/composables/private/use-fullscreen.js","dependencies":[{"path":"/app/node_modules/quasar/src/composables/private/use-fullscreen.js","mtime":1640793220809},{"path":"/app/babel.config.js","mtime":1641198370373},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/thread-loader/dist/cjs.js","mtime":1640299636617},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVmLCB3YXRjaCwgb25CZWZvcmVNb3VudCwgb25Nb3VudGVkLCBvbkJlZm9yZVVubW91bnQsIGdldEN1cnJlbnRJbnN0YW5jZSB9IGZyb20gJ3Z1ZSc7CmltcG9ydCBIaXN0b3J5IGZyb20gJy4uLy4uL2hpc3RvcnkuanMnOwppbXBvcnQgeyB2bUhhc1JvdXRlciB9IGZyb20gJy4uLy4uL3V0aWxzL3ByaXZhdGUvdm0uanMnOwp2YXIgY291bnRlciA9IDA7CmV4cG9ydCB2YXIgdXNlRnVsbHNjcmVlblByb3BzID0gewogIGZ1bGxzY3JlZW46IEJvb2xlYW4sCiAgbm9Sb3V0ZUZ1bGxzY3JlZW5FeGl0OiBCb29sZWFuCn07CmV4cG9ydCB2YXIgdXNlRnVsbHNjcmVlbkVtaXRzID0gWyd1cGRhdGU6ZnVsbHNjcmVlbicsICdmdWxsc2NyZWVuJ107CmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpIHsKICB2YXIgdm0gPSBnZXRDdXJyZW50SW5zdGFuY2UoKTsKICB2YXIgcHJvcHMgPSB2bS5wcm9wcywKICAgICAgZW1pdCA9IHZtLmVtaXQsCiAgICAgIHByb3h5ID0gdm0ucHJveHk7CiAgdmFyIGhpc3RvcnlFbnRyeSwgZnVsbHNjcmVlbkZpbGxlck5vZGUsIGNvbnRhaW5lcjsKICB2YXIgaW5GdWxsc2NyZWVuID0gcmVmKGZhbHNlKTsKICB2bUhhc1JvdXRlcih2bSkgPT09IHRydWUgJiYgd2F0Y2goZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHByb3h5LiRyb3V0ZTsKICB9LCBmdW5jdGlvbiAoKSB7CiAgICBwcm9wcy5ub1JvdXRlRnVsbHNjcmVlbkV4aXQgIT09IHRydWUgJiYgZXhpdEZ1bGxzY3JlZW4oKTsKICB9KTsKICB3YXRjaChmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gcHJvcHMuZnVsbHNjcmVlbjsKICB9LCBmdW5jdGlvbiAodikgewogICAgaWYgKGluRnVsbHNjcmVlbi52YWx1ZSAhPT0gdikgewogICAgICB0b2dnbGVGdWxsc2NyZWVuKCk7CiAgICB9CiAgfSk7CiAgd2F0Y2goaW5GdWxsc2NyZWVuLCBmdW5jdGlvbiAodikgewogICAgZW1pdCgndXBkYXRlOmZ1bGxzY3JlZW4nLCB2KTsKICAgIGVtaXQoJ2Z1bGxzY3JlZW4nLCB2KTsKICB9KTsKCiAgZnVuY3Rpb24gdG9nZ2xlRnVsbHNjcmVlbigpIHsKICAgIGlmIChpbkZ1bGxzY3JlZW4udmFsdWUgPT09IHRydWUpIHsKICAgICAgZXhpdEZ1bGxzY3JlZW4oKTsKICAgIH0gZWxzZSB7CiAgICAgIHNldEZ1bGxzY3JlZW4oKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHNldEZ1bGxzY3JlZW4oKSB7CiAgICBpZiAoaW5GdWxsc2NyZWVuLnZhbHVlID09PSB0cnVlKSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpbkZ1bGxzY3JlZW4udmFsdWUgPSB0cnVlOwogICAgY29udGFpbmVyID0gcHJveHkuJGVsLnBhcmVudE5vZGU7CiAgICBjb250YWluZXIucmVwbGFjZUNoaWxkKGZ1bGxzY3JlZW5GaWxsZXJOb2RlLCBwcm94eS4kZWwpOwogICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChwcm94eS4kZWwpOwogICAgY291bnRlcisrOwoKICAgIGlmIChjb3VudGVyID09PSAxKSB7CiAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgncS1ib2R5LS1mdWxsc2NyZWVuLW1peGluJyk7CiAgICB9CgogICAgaGlzdG9yeUVudHJ5ID0gewogICAgICBoYW5kbGVyOiBleGl0RnVsbHNjcmVlbgogICAgfTsKICAgIEhpc3RvcnkuYWRkKGhpc3RvcnlFbnRyeSk7CiAgfQoKICBmdW5jdGlvbiBleGl0RnVsbHNjcmVlbigpIHsKICAgIGlmIChpbkZ1bGxzY3JlZW4udmFsdWUgIT09IHRydWUpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChoaXN0b3J5RW50cnkgIT09IHZvaWQgMCkgewogICAgICBIaXN0b3J5LnJlbW92ZShoaXN0b3J5RW50cnkpOwogICAgICBoaXN0b3J5RW50cnkgPSB2b2lkIDA7CiAgICB9CgogICAgY29udGFpbmVyLnJlcGxhY2VDaGlsZChwcm94eS4kZWwsIGZ1bGxzY3JlZW5GaWxsZXJOb2RlKTsKICAgIGluRnVsbHNjcmVlbi52YWx1ZSA9IGZhbHNlOwogICAgY291bnRlciA9IE1hdGgubWF4KDAsIGNvdW50ZXIgLSAxKTsKCiAgICBpZiAoY291bnRlciA9PT0gMCkgewogICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ3EtYm9keS0tZnVsbHNjcmVlbi1taXhpbicpOwoKICAgICAgaWYgKHByb3h5LiRlbC5zY3JvbGxJbnRvVmlldyAhPT0gdm9pZCAwKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBwcm94eS4kZWwuc2Nyb2xsSW50b1ZpZXcoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KCiAgb25CZWZvcmVNb3VudChmdW5jdGlvbiAoKSB7CiAgICBmdWxsc2NyZWVuRmlsbGVyTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTsKICB9KTsKICBvbk1vdW50ZWQoZnVuY3Rpb24gKCkgewogICAgcHJvcHMuZnVsbHNjcmVlbiA9PT0gdHJ1ZSAmJiBzZXRGdWxsc2NyZWVuKCk7CiAgfSk7CiAgb25CZWZvcmVVbm1vdW50KGV4aXRGdWxsc2NyZWVuKTsgLy8gZXhwb3NlIHB1YmxpYyBtZXRob2RzCgogIE9iamVjdC5hc3NpZ24ocHJveHksIHsKICAgIHRvZ2dsZUZ1bGxzY3JlZW46IHRvZ2dsZUZ1bGxzY3JlZW4sCiAgICBzZXRGdWxsc2NyZWVuOiBzZXRGdWxsc2NyZWVuLAogICAgZXhpdEZ1bGxzY3JlZW46IGV4aXRGdWxsc2NyZWVuCiAgfSk7CiAgcmV0dXJuIHsKICAgIGluRnVsbHNjcmVlbjogaW5GdWxsc2NyZWVuLAogICAgdG9nZ2xlRnVsbHNjcmVlbjogdG9nZ2xlRnVsbHNjcmVlbgogIH07Cn0="},{"version":3,"sources":["/app/node_modules/quasar/src/composables/private/use-fullscreen.js"],"names":["ref","watch","onBeforeMount","onMounted","onBeforeUnmount","getCurrentInstance","History","vmHasRouter","counter","useFullscreenProps","fullscreen","Boolean","noRouteFullscreenExit","useFullscreenEmits","vm","props","emit","proxy","historyEntry","fullscreenFillerNode","container","inFullscreen","$route","exitFullscreen","v","value","toggleFullscreen","setFullscreen","$el","parentNode","replaceChild","document","body","appendChild","classList","add","handler","remove","Math","max","scrollIntoView","setTimeout","createElement","Object","assign"],"mappings":"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","sourcesContent":["import { ref, watch, onBeforeMount, onMounted, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport History from '../../history.js'\nimport { vmHasRouter } from '../../utils/private/vm.js'\n\nlet counter = 0\n\nexport const useFullscreenProps = {\n  fullscreen: Boolean,\n  noRouteFullscreenExit: Boolean\n}\n\nexport const useFullscreenEmits = [ 'update:fullscreen', 'fullscreen' ]\n\nexport default function () {\n  const vm = getCurrentInstance()\n  const { props, emit, proxy } = vm\n\n  let historyEntry, fullscreenFillerNode, container\n  const inFullscreen = ref(false)\n\n  vmHasRouter(vm) === true && watch(() => proxy.$route, () => {\n    props.noRouteFullscreenExit !== true && exitFullscreen()\n  })\n\n  watch(() => props.fullscreen, v => {\n    if (inFullscreen.value !== v) {\n      toggleFullscreen()\n    }\n  })\n\n  watch(inFullscreen, v => {\n    emit('update:fullscreen', v)\n    emit('fullscreen', v)\n  })\n\n  function toggleFullscreen () {\n    if (inFullscreen.value === true) {\n      exitFullscreen()\n    }\n    else {\n      setFullscreen()\n    }\n  }\n\n  function setFullscreen () {\n    if (inFullscreen.value === true) {\n      return\n    }\n\n    inFullscreen.value = true\n    container = proxy.$el.parentNode\n    container.replaceChild(fullscreenFillerNode, proxy.$el)\n    document.body.appendChild(proxy.$el)\n\n    counter++\n    if (counter === 1) {\n      document.body.classList.add('q-body--fullscreen-mixin')\n    }\n\n    historyEntry = {\n      handler: exitFullscreen\n    }\n    History.add(historyEntry)\n  }\n\n  function exitFullscreen () {\n    if (inFullscreen.value !== true) {\n      return\n    }\n\n    if (historyEntry !== void 0) {\n      History.remove(historyEntry)\n      historyEntry = void 0\n    }\n\n    container.replaceChild(proxy.$el, fullscreenFillerNode)\n    inFullscreen.value = false\n\n    counter = Math.max(0, counter - 1)\n\n    if (counter === 0) {\n      document.body.classList.remove('q-body--fullscreen-mixin')\n\n      if (proxy.$el.scrollIntoView !== void 0) {\n        setTimeout(() => { proxy.$el.scrollIntoView() })\n      }\n    }\n  }\n\n  onBeforeMount(() => {\n    fullscreenFillerNode = document.createElement('span')\n  })\n\n  onMounted(() => {\n    props.fullscreen === true && setFullscreen()\n  })\n\n  onBeforeUnmount(exitFullscreen)\n\n  // expose public methods\n  Object.assign(proxy, {\n    toggleFullscreen,\n    setFullscreen,\n    exitFullscreen\n  })\n\n  return {\n    inFullscreen,\n    toggleFullscreen\n  }\n}\n"]}]}