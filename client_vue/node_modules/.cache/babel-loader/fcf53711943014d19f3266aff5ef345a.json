{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/quasar/src/components/uploader/xhr-uploader-plugin.js","dependencies":[{"path":"/app/node_modules/quasar/src/components/uploader/xhr-uploader-plugin.js","mtime":1640793220809},{"path":"/app/babel.config.js","mtime":1641198370373},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/app/node_modules/quasar/src/components/uploader/xhr-uploader-plugin.js"],"names":["ref","computed","getFn","prop","props","url","Function","String","method","type","default","fieldName","file","name","headers","Array","formFields","withCredentials","Boolean","sendRaw","batch","factory","emits","injectPlugin","emit","helpers","xhrs","promises","workingThreads","xhrProps","isUploading","value","isBusy","length","abortPromises","abort","forEach","x","upload","queue","queuedFiles","slice","runFactory","files","performUpload","res","Error","catch","then","push","failed","err","isAlive","filter","p","concat","f","updateFileStatus","form","FormData","xhr","XMLHttpRequest","getProp","arg","console","error","fields","field","append","uploadIndex","uploadIndexSize","localUploadedSize","maxUploadSize","aborted","addEventListener","e","loaded","Math","min","uploadedSize","size","i","uploaded","onreadystatechange","readyState","status","uploadedFiles","open","head","setRequestHeader","__abort","send","Blob"],"mappings":"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","sourcesContent":["import { ref, computed } from 'vue'\n\nfunction getFn (prop) {\n  return typeof prop === 'function'\n    ? prop\n    : () => prop\n}\n\nconst props = {\n  url: [ Function, String ],\n  method: {\n    type: [ Function, String ],\n    default: 'POST'\n  },\n  fieldName: {\n    type: [ Function, String ],\n    default: () => {\n      return file => file.name\n    }\n  },\n  headers: [ Function, Array ],\n  formFields: [ Function, Array ],\n  withCredentials: [ Function, Boolean ],\n  sendRaw: [ Function, Boolean ],\n\n  batch: [ Function, Boolean ],\n  factory: Function\n}\n\nconst emits = [ 'factory-failed', 'uploaded', 'failed', 'uploading' ]\n\nfunction injectPlugin ({ props, emit, helpers }) {\n  const xhrs = ref([])\n  const promises = ref([])\n  const workingThreads = ref(0)\n\n  const xhrProps = computed(() => ({\n    url: getFn(props.url),\n    method: getFn(props.method),\n    headers: getFn(props.headers),\n    formFields: getFn(props.formFields),\n    fieldName: getFn(props.fieldName),\n    withCredentials: getFn(props.withCredentials),\n    sendRaw: getFn(props.sendRaw),\n    batch: getFn(props.batch)\n  }))\n\n  const isUploading = computed(() => workingThreads.value > 0)\n  const isBusy = computed(() => promises.value.length > 0)\n\n  let abortPromises\n\n  function abort () {\n    xhrs.value.forEach(x => { x.abort() })\n\n    if (promises.value.length > 0) {\n      abortPromises = true\n    }\n  }\n\n  function upload () {\n    const queue = helpers.queuedFiles.value.slice(0)\n    helpers.queuedFiles.value = []\n\n    if (xhrProps.value.batch(queue)) {\n      runFactory(queue)\n    }\n    else {\n      queue.forEach(file => {\n        runFactory([ file ])\n      })\n    }\n  }\n\n  function runFactory (files) {\n    workingThreads.value++\n\n    if (typeof props.factory !== 'function') {\n      performUpload(files, {})\n      return\n    }\n\n    const res = props.factory(files)\n\n    if (!res) {\n      emit(\n        'factory-failed',\n        new Error('QUploader: factory() does not return properly'),\n        files\n      )\n      workingThreads.value--\n    }\n    else if (typeof res.catch === 'function' && typeof res.then === 'function') {\n      promises.value.push(res)\n\n      const failed = err => {\n        if (helpers.isAlive() === true) {\n          promises.value = promises.value.filter(p => p !== res)\n\n          if (promises.value.length === 0) {\n            abortPromises = false\n          }\n\n          helpers.queuedFiles.value = helpers.queuedFiles.value.concat(files)\n          files.forEach(f => { helpers.updateFileStatus(f, 'failed') })\n\n          emit('factory-failed', err, files)\n          workingThreads.value--\n        }\n      }\n\n      res.then(factory => {\n        if (abortPromises === true) {\n          failed(new Error('Aborted'))\n        }\n        else if (helpers.isAlive() === true) {\n          promises.value = promises.value.filter(p => p !== res)\n          performUpload(files, factory)\n        }\n      }).catch(failed)\n    }\n    else {\n      performUpload(files, res || {})\n    }\n  }\n\n  function performUpload (files, factory) {\n    const\n      form = new FormData(),\n      xhr = new XMLHttpRequest()\n\n    const getProp = (name, arg) => {\n      return factory[ name ] !== void 0\n        ? getFn(factory[ name ])(arg)\n        : xhrProps.value[ name ](arg)\n    }\n\n    const url = getProp('url', files)\n\n    if (!url) {\n      console.error('q-uploader: invalid or no URL specified')\n      workingThreads.value--\n      return\n    }\n\n    const fields = getProp('formFields', files)\n    fields !== void 0 && fields.forEach(field => {\n      form.append(field.name, field.value)\n    })\n\n    let\n      uploadIndex = 0,\n      uploadIndexSize = 0,\n      localUploadedSize = 0,\n      maxUploadSize = 0,\n      aborted\n\n    xhr.upload.addEventListener('progress', e => {\n      if (aborted === true) { return }\n\n      const loaded = Math.min(maxUploadSize, e.loaded)\n\n      helpers.uploadedSize.value += loaded - localUploadedSize\n      localUploadedSize = loaded\n\n      let size = localUploadedSize - uploadIndexSize\n      for (let i = uploadIndex; size > 0 && i < files.length; i++) {\n        const\n          file = files[ i ],\n          uploaded = size > file.size\n\n        if (uploaded) {\n          size -= file.size\n          uploadIndex++\n          uploadIndexSize += file.size\n          helpers.updateFileStatus(file, 'uploading', file.size)\n        }\n        else {\n          helpers.updateFileStatus(file, 'uploading', size)\n          return\n        }\n      }\n    }, false)\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState < 4) {\n        return\n      }\n\n      if (xhr.status && xhr.status < 400) {\n        helpers.uploadedFiles.value = helpers.uploadedFiles.value.concat(files)\n        files.forEach(f => { helpers.updateFileStatus(f, 'uploaded') })\n        emit('uploaded', { files, xhr })\n      }\n      else {\n        aborted = true\n        helpers.uploadedSize.value -= localUploadedSize\n        helpers.queuedFiles.value = helpers.queuedFiles.value.concat(files)\n        files.forEach(f => { helpers.updateFileStatus(f, 'failed') })\n        emit('failed', { files, xhr })\n      }\n\n      workingThreads.value--\n      xhrs.value = xhrs.value.filter(x => x !== xhr)\n    }\n\n    xhr.open(\n      getProp('method', files),\n      url\n    )\n\n    if (getProp('withCredentials', files) === true) {\n      xhr.withCredentials = true\n    }\n\n    const headers = getProp('headers', files)\n    headers !== void 0 && headers.forEach(head => {\n      xhr.setRequestHeader(head.name, head.value)\n    })\n\n    const sendRaw = getProp('sendRaw', files)\n\n    files.forEach(file => {\n      helpers.updateFileStatus(file, 'uploading', 0)\n      if (sendRaw !== true) {\n        form.append(getProp('fieldName', file), file, file.name)\n      }\n      file.xhr = xhr\n      file.__abort = () => { xhr.abort() }\n      maxUploadSize += file.size\n    })\n\n    emit('uploading', { files, xhr })\n    xhrs.value.push(xhr)\n\n    if (sendRaw === true) {\n      xhr.send(new Blob(files))\n    }\n    else {\n      xhr.send(form)\n    }\n  }\n\n  return {\n    isUploading,\n    isBusy,\n\n    abort,\n    upload\n  }\n}\n\nexport default {\n  name: 'QUploader',\n  props,\n  emits,\n  injectPlugin\n}\n"]}]}