{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-0!/app/node_modules/cache-loader/dist/cjs.js??ref--1-1!/app/node_modules/vue-loader-v16/dist/index.js??ref--1-2!/app/src/components/User/Register.vue?vue&type=script&lang=js","dependencies":[{"path":"/app/src/components/User/Register.vue","mtime":1640889785707},{"path":"/app/babel.config.js","mtime":1640798228857},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js","mtime":1640775278388},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/vue-loader-v16/dist/index.js","mtime":1640299655523}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgQ29udGFpbmVyIGZyb20gIkAvY29tcG9uZW50cy9Db250YWluZXIudnVlIjsKaW1wb3J0IEF1dGhBUEkgZnJvbSAiQC9hcGkvYXV0aCI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUmVnaXN0ZXJDb21wIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmFtZTogIiIsCiAgICAgIGxvZ2luOiAiIiwKICAgICAgZW1haWw6ICIiLAogICAgICBwYXNzd29yZDogIiIsCiAgICAgIHBhc3N3b3JkQ29uZmlybWF0aW9uOiAiIiwKICAgICAgc3VibWl0dGluZzogZmFsc2UKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDb250YWluZXI6IENvbnRhaW5lcgogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXRIZWlnaHQ6IGZ1bmN0aW9uIHJlc2V0SGVpZ2h0KCkgewogICAgICByZXR1cm4gewogICAgICAgIG1pbkhlaWdodDogImF1dG8iCiAgICAgIH07CiAgICB9LAogICAgaGFuZGxlU3VibWl0OiBmdW5jdGlvbiBoYW5kbGVTdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBkYXRhLCBtZXNzYWdlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIHRoaXMuJHJlZnMubmFtZVJlZi52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgLy8gdGhpcy4kcmVmcy5sb2dpblJlZi52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgLy8gdGhpcy4kcmVmcy5lbWFpbFJlZi52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgLy8gdGhpcy4kcmVmcy5wYXNzd29yZFJlZi52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgLy8gdGhpcy4kcmVmcy5wYXNzd29yZENvbmZpcm1hdGlvblJlZi52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgLy8gaWYgKAogICAgICAgICAgICAgICAgLy8gICB0aGlzLiRyZWZzLm5hbWVSZWYuaGFzRXJyb3IgfHwKICAgICAgICAgICAgICAgIC8vICAgdGhpcy4kcmVmcy5sb2dpblJlZi5oYXNFcnJvciB8fAogICAgICAgICAgICAgICAgLy8gICB0aGlzLiRyZWZzLmVtYWlsUmVmLmhhc0Vycm9yIHx8CiAgICAgICAgICAgICAgICAvLyAgIHRoaXMuJHJlZnMucGFzc3dvcmRSZWYuaGFzRXJyb3IgfHwKICAgICAgICAgICAgICAgIC8vICAgdGhpcy4kcmVmcy5wYXNzd29yZENvbmZpcm1hdGlvblJlZi5oYXNFcnJvcgogICAgICAgICAgICAgICAgLy8gKSB7CiAgICAgICAgICAgICAgICAvLyAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICAgIF90aGlzLnN1Ym1pdHRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgbmFtZTogX3RoaXMubmFtZSwKICAgICAgICAgICAgICAgICAgbG9naW46IF90aGlzLmxvZ2luLAogICAgICAgICAgICAgICAgICBlbWFpbDogX3RoaXMuZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBfdGhpcy5wYXNzd29yZCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmRfY29uZmlybWF0aW9uOiBfdGhpcy5wYXNzd29yZENvbmZpcm1hdGlvbgogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gQXV0aEFQSS5yZWdpc3RlcihkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3RoaXMuc3VibWl0dGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCgiL2xvZ2luIik7CgogICAgICAgICAgICAgICAgX3RoaXMuJHEubm90aWZ5KHsKICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IHRydWUsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICJVc2VyIGNyZWF0ZWQuIFBsZWFzZSBsb2cgaW4uIiwKICAgICAgICAgICAgICAgICAgLy8gY29sb3I6ICdwcmltYXJ5JywKICAgICAgICAgICAgICAgICAgdHlwZTogInBvc2l0aXZlIiwKICAgICAgICAgICAgICAgICAgYWN0aW9uczogW3sKICAgICAgICAgICAgICAgICAgICBsYWJlbDogIkRpc21pc3MiLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiLAogICAgICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7Ly8KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBtZXNzYWdlID0gIlRoZSByZXF1ZXN0IGZhaWxlZC4iOwogICAgICAgICAgICAgICAgd2luZG93LmVyciA9IF9jb250ZXh0LnQwOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwogICAgICAgICAgICAgICAgX3RoaXMuc3VibWl0dGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIGlmIChfY29udGV4dC50MC5yZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBtZXNzYWdlID0gX2NvbnRleHQudDAucmVzcG9uc2UuZGF0YS5kYXRhLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMuJHEubm90aWZ5KHsKICAgICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IHRydWUsCiAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgIC8vIGNvbG9yOiAncHJpbWFyeScsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJuZWdhdGl2ZSIsCiAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwLAogICAgICAgICAgICAgICAgICBhY3Rpb25zOiBbewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiRGlzbWlzcyIsCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJ3aGl0ZSIsCiAgICAgICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcigpIHsvLwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/app/src/components/User/Register.vue"],"names":[],"mappings":";;;AAsFA,OAAO,SAAP,MAAsB,4BAAtB;AACA,OAAO,OAAP,MAAoB,YAApB;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,cADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,IAAI,EAAE,EADD;AAEL,MAAA,KAAK,EAAE,EAFF;AAGL,MAAA,KAAK,EAAE,EAHF;AAIL,MAAA,QAAQ,EAAE,EAJL;AAKL,MAAA,oBAAoB,EAAE,EALjB;AAML,MAAA,UAAU,EAAE;AANP,KAAP;AAQD,GAXY;AAYb,EAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAT;AADU,GAZC;AAeb,EAAA,OAAO,EAAE;AACP,IAAA,WADO,yBACO;AACZ,aAAO;AAAE,QAAA,SAAS,EAAE;AAAb,OAAP;AACD,KAHM;AAID,IAAA,YAJC,0BAIc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,gBAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AAEM,gBAAA,IAnBa,GAmBN;AACX,kBAAA,IAAI,EAAE,KAAI,CAAC,IADA;AAEX,kBAAA,KAAK,EAAE,KAAI,CAAC,KAFD;AAGX,kBAAA,KAAK,EAAE,KAAI,CAAC,KAHD;AAIX,kBAAA,QAAQ,EAAE,KAAI,CAAC,QAJJ;AAKX,kBAAA,qBAAqB,EAAE,KAAI,CAAC;AALjB,iBAnBM;AAAA;AAAA;AAAA,uBA4BX,OAAO,CAAC,QAAR,CAAiB,IAAjB,CA5BW;;AAAA;AA6BjB,gBAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;;AACA,gBAAA,KAAI,CAAC,OAAL,CAAa,IAAb;;AACA,gBAAA,KAAI,CAAC,EAAL,CAAQ,MAAR,CAAe;AACb,kBAAA,QAAQ,EAAE,IADG;AAEb,kBAAA,OAAO,EAAE,8BAFI;AAGb;AACA,kBAAA,IAAI,EAAE,UAJO;AAKb,kBAAA,OAAO,EAAE,CACP;AACE,oBAAA,KAAK,EAAE,SADT;AAEE,oBAAA,KAAK,EAAE,OAFT;AAGE,oBAAA,OAAO,EAAE,mBAAM,CACb;AACD;AALH,mBADO;AALI,iBAAf;;AA/BiB;AAAA;;AAAA;AAAA;AAAA;AA+Cb,gBAAA,OA/Ca,GA+CH,qBA/CG;AAgDjB,gBAAA,MAAM,CAAC,GAAP;AACA,gBAAA,OAAO,CAAC,GAAR;AACA,gBAAA,KAAI,CAAC,UAAL,GAAkB,KAAlB;;AACA,oBAAI,YAAM,QAAV,EAAoB;AAClB,kBAAA,OAAM,GAAI,YAAM,QAAN,CAAe,IAAf,CAAoB,IAApB,CAAyB,OAAnC;AACF;;AACA,gBAAA,KAAI,CAAC,EAAL,CAAQ,MAAR,CAAe;AACb,kBAAA,QAAQ,EAAE,IADG;AAEb,kBAAA,OAAO,EAAE,OAFI;AAGb;AACA,kBAAA,IAAI,EAAE,UAJO;AAKb,kBAAA,OAAO,EAAE,KALI;AAMb,kBAAA,OAAO,EAAE,CACP;AACE,oBAAA,KAAK,EAAE,SADT;AAEE,oBAAA,KAAK,EAAE,OAFT;AAGE,oBAAA,OAAO,EAAE,mBAAM,CACb;AACD;AALH,mBADO;AANI,iBAAf;;AAtDiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuEpB;AA3EM;AAfI,CAAf","sourcesContent":["<template>\n  <q-page padding :style-fn=\"resetHeight\">\n    <Container style=\"max-width: 700px\">\n      <h3>Register</h3>\n      <form @submit.prevent=\"handleSubmit\">\n        <q-input\n          :rules=\"[(val) => !!val || 'Name is required']\"\n          ref=\"nameRef\"\n          v-model=\"name\"\n          class=\"q-mt-sm\"\n          outlined\n          label=\"Name\"\n        />\n\n        <q-input\n          :rules=\"[(val) => !!val || 'Login is required']\"\n          ref=\"loginRef\"\n          v-model=\"login\"\n          class=\"q-mt-sm\"\n          outlined\n          label=\"Login/Username\"\n        />\n\n        <q-input\n          :rules=\"[\n            (val) =>\n              /\\S+@\\S+\\.\\S+/.test(val) ||\n              'Email required. Please add a valid email.',\n          ]\"\n          ref=\"emailRef\"\n          v-model=\"email\"\n          class=\"q-mt-sm\"\n          outlined\n          label=\"Email\"\n        />\n\n        <q-input\n          :rules=\"[(val) => !!val || 'Password is required']\"\n          type=\"password\"\n          ref=\"passwordRef\"\n          v-model=\"password\"\n          class=\"q-mt-sm\"\n          outlined\n          label=\"Password\"\n        />\n\n        <q-input\n          :rules=\"[(val) => val === password || 'Passwords must match']\"\n          type=\"password\"\n          ref=\"passwordConfirmationRef\"\n          v-model=\"passwordConfirmation\"\n          class=\"q-mt-sm\"\n          outlined\n          label=\"Password confirmation\"\n        />\n\n        <!-- <q-card flat bordered class=\"q-mt-sm\">\n          <q-editor v-model=\"note.content\" min-height=\"5rem\" />\n        </q-card> -->\n\n        <div class=\"q-mt-md\">\n          <q-btn color=\"grey\" to=\"/\" type=\"reset\" :disable=\"submitting\">\n            Cancel\n          </q-btn>\n          <q-btn\n            class=\"q-ml-sm\"\n            color=\"positive\"\n            type=\"submit\"\n            :disable=\"submitting\"\n          >\n            <q-spinner\n              v-if=\"submitting\"\n              class=\"q-mr-sm\"\n              color=\"white\"\n              size=\"1em\"\n              :thickness=\"3\"\n            />\n            Register\n          </q-btn>\n        </div>\n      </form>\n    </Container>\n  </q-page>\n</template>\n\n<script>\nimport Container from \"@/components/Container.vue\";\nimport AuthAPI from \"@/api/auth\";\n\nexport default {\n  name: \"RegisterComp\",\n  data() {\n    return {\n      name: \"\",\n      login: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      submitting: false,\n    };\n  },\n  components: {\n    Container,\n  },\n  methods: {\n    resetHeight() {\n      return { minHeight: \"auto\" };\n    },\n    async handleSubmit() {\n      // this.$refs.nameRef.validate();\n      // this.$refs.loginRef.validate();\n      // this.$refs.emailRef.validate();\n      // this.$refs.passwordRef.validate();\n      // this.$refs.passwordConfirmationRef.validate();\n\n      // if (\n      //   this.$refs.nameRef.hasError ||\n      //   this.$refs.loginRef.hasError ||\n      //   this.$refs.emailRef.hasError ||\n      //   this.$refs.passwordRef.hasError ||\n      //   this.$refs.passwordConfirmationRef.hasError\n      // ) {\n      //   return false;\n      // }\n\n      this.submitting = true;\n\n      const data = {\n        name: this.name,\n        login: this.login,\n        email: this.email,\n        password: this.password,\n        password_confirmation: this.passwordConfirmation,\n      };\n\n      try {\n        await AuthAPI.register(data);\n        this.submitting = false;\n        this.$router.push(`/login`);\n        this.$q.notify({\n          progress: true,\n          message: \"User created. Please log in.\",\n          // color: 'primary',\n          type: \"positive\",\n          actions: [\n            {\n              label: \"Dismiss\",\n              color: \"white\",\n              handler: () => {\n                //\n              },\n            },\n          ],\n        });\n      } catch (error) {\n        let message = \"The request failed.\";\n        window.err = error;\n        console.log(error);\n        this.submitting = false;\n        if (error.response) {\n          message = error.response.data.data.message;\n        }\n        this.$q.notify({\n          progress: true,\n          message: message,\n          // color: 'primary',\n          type: \"negative\",\n          timeout: 10000,\n          actions: [\n            {\n              label: \"Dismiss\",\n              color: \"white\",\n              handler: () => {\n                //\n              },\n            },\n          ],\n        });\n      }\n    },\n  },\n};\n</script>\n"],"sourceRoot":""}]}