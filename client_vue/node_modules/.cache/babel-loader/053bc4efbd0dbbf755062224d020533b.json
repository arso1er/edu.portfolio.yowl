{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js!/app/node_modules/quasar/src/icon-set.js","dependencies":[{"path":"/app/node_modules/quasar/src/icon-set.js","mtime":1640793220809},{"path":"/app/babel.config.js","mtime":1641198370373},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1640299636612},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1640299636618},{"path":"/app/node_modules/vue-cli-plugin-quasar/lib/loader.js.transform-quasar-imports.js","mtime":1640775278388}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2FwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBkZWZpbmVSZWFjdGl2ZVBsdWdpbiBmcm9tICcuL3V0aWxzL3ByaXZhdGUvZGVmaW5lLXJlYWN0aXZlLXBsdWdpbi5qcyc7CmltcG9ydCBtYXRlcmlhbEljb25zIGZyb20gJy4uL2ljb24tc2V0L21hdGVyaWFsLWljb25zLmpzJzsKaW1wb3J0IHsgaW5qZWN0UHJvcCB9IGZyb20gJy4vdXRpbHMvcHJpdmF0ZS9pbmplY3Qtb2JqLXByb3AuanMnOwp2YXIgUGx1Z2luID0gZGVmaW5lUmVhY3RpdmVQbHVnaW4oewogIGljb25NYXBGbjogbnVsbCwKICBfX2ljb25zOiB7fQp9LCB7CiAgc2V0OiBmdW5jdGlvbiBzZXQoc2V0T2JqZWN0LCBzc3JDb250ZXh0KSB7CiAgICB2YXIgZGVmID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBzZXRPYmplY3QpLCB7fSwgewogICAgICBydGw6IHNldE9iamVjdC5ydGwgPT09IHRydWUKICAgIH0pOwoKICAgIGlmIChfX1FVQVNBUl9TU1JfU0VSVkVSX18pIHsKICAgICAgaWYgKHNzckNvbnRleHQgPT09IHZvaWQgMCkgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ1NTUiBFUlJPUjogc2Vjb25kIHBhcmFtIHJlcXVpcmVkOiBRdWFzYXIuaWNvblNldC5zZXQoaWNvblNldCwgc3NyQ29udGV4dCknKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGRlZi5zZXQgPSBzc3JDb250ZXh0LiRxLmljb25TZXQuc2V0OwogICAgICBPYmplY3QuYXNzaWduKHNzckNvbnRleHQuJHEuaWNvblNldCwgZGVmKTsKICAgIH0gZWxzZSB7CiAgICAgIGRlZi5zZXQgPSBQbHVnaW4uc2V0OwogICAgICBPYmplY3QuYXNzaWduKFBsdWdpbi5fX2ljb25zLCBkZWYpOwogICAgfQogIH0sCiAgaW5zdGFsbDogZnVuY3Rpb24gaW5zdGFsbChfcmVmKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciAkcSA9IF9yZWYuJHEsCiAgICAgICAgaWNvblNldCA9IF9yZWYuaWNvblNldCwKICAgICAgICBzc3JDb250ZXh0ID0gX3JlZi5zc3JDb250ZXh0OwoKICAgIGlmIChfX1FVQVNBUl9TU1JfU0VSVkVSX18pIHsKICAgICAgdmFyIGluaXRpYWxTZXQgPSBpY29uU2V0IHx8IG1hdGVyaWFsSWNvbnM7CiAgICAgICRxLmljb25NYXBGbiA9IHNzckNvbnRleHQuJHEuY29uZmlnLmljb25NYXBGbiB8fCB0aGlzLmljb25NYXBGbiB8fCBudWxsOwogICAgICAkcS5pY29uU2V0ID0ge307CgogICAgICAkcS5pY29uU2V0LnNldCA9IGZ1bmN0aW9uIChzZXRPYmplY3QpIHsKICAgICAgICBfdGhpcy5zZXQoc2V0T2JqZWN0LCBzc3JDb250ZXh0KTsKICAgICAgfTsKCiAgICAgICRxLmljb25TZXQuc2V0KGluaXRpYWxTZXQpOwogICAgfSBlbHNlIHsKICAgICAgaWYgKCRxLmNvbmZpZy5pY29uTWFwRm4gIT09IHZvaWQgMCkgewogICAgICAgIHRoaXMuaWNvbk1hcEZuID0gJHEuY29uZmlnLmljb25NYXBGbjsKICAgICAgfQoKICAgICAgJHEuaWNvblNldCA9IHRoaXMuX19pY29uczsKICAgICAgaW5qZWN0UHJvcCgkcSwgJ2ljb25NYXBGbicsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gX3RoaXMuaWNvbk1hcEZuOwogICAgICB9LCBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgX3RoaXMuaWNvbk1hcEZuID0gdmFsOwogICAgICB9KTsKCiAgICAgIGlmICh0aGlzLl9faW5zdGFsbGVkID09PSB0cnVlKSB7CiAgICAgICAgaWNvblNldCAhPT0gdm9pZCAwICYmIHRoaXMuc2V0KGljb25TZXQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2V0KGljb25TZXQgfHwgbWF0ZXJpYWxJY29ucyk7CiAgICAgIH0KICAgIH0KICB9Cn0pOwpleHBvcnQgZGVmYXVsdCBQbHVnaW47"},{"version":3,"sources":["/app/node_modules/quasar/src/icon-set.js"],"names":["defineReactivePlugin","materialIcons","injectProp","Plugin","iconMapFn","__icons","set","setObject","ssrContext","def","rtl","__QUASAR_SSR_SERVER__","console","error","$q","iconSet","Object","assign","install","initialSet","config","val","__installed"],"mappings":";AAAA,OAAOA,oBAAP,MAAiC,2CAAjC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,UAAT,QAA2B,oCAA3B;AAEA,IAAMC,MAAM,GAAGH,oBAAoB,CAAC;AAClCI,EAAAA,SAAS,EAAE,IADuB;AAElCC,EAAAA,OAAO,EAAE;AAFyB,CAAD,EAGhC;AACDC,EAAAA,GADC,eACIC,SADJ,EACeC,UADf,EAC2B;AAC1B,QAAMC,GAAG,mCAAQF,SAAR;AAAmBG,MAAAA,GAAG,EAAEH,SAAS,CAACG,GAAV,KAAkB;AAA1C,MAAT;;AAEA,QAAIC,qBAAJ,EAA2B;AACzB,UAAIH,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBI,QAAAA,OAAO,CAACC,KAAR,CAAc,2EAAd;AACA;AACD;;AAEDJ,MAAAA,GAAG,CAACH,GAAJ,GAAUE,UAAU,CAACM,EAAX,CAAcC,OAAd,CAAsBT,GAAhC;AACAU,MAAAA,MAAM,CAACC,MAAP,CAAcT,UAAU,CAACM,EAAX,CAAcC,OAA5B,EAAqCN,GAArC;AACD,KARD,MASK;AACHA,MAAAA,GAAG,CAACH,GAAJ,GAAUH,MAAM,CAACG,GAAjB;AACAU,MAAAA,MAAM,CAACC,MAAP,CAAcd,MAAM,CAACE,OAArB,EAA8BI,GAA9B;AACD;AACF,GAjBA;AAmBDS,EAAAA,OAnBC,yBAmBqC;AAAA;;AAAA,QAA3BJ,EAA2B,QAA3BA,EAA2B;AAAA,QAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,QAAdP,UAAc,QAAdA,UAAc;;AACpC,QAAIG,qBAAJ,EAA2B;AACzB,UAAMQ,UAAU,GAAGJ,OAAO,IAAId,aAA9B;AAEAa,MAAAA,EAAE,CAACV,SAAH,GAAeI,UAAU,CAACM,EAAX,CAAcM,MAAd,CAAqBhB,SAArB,IAAkC,KAAKA,SAAvC,IAAoD,IAAnE;AACAU,MAAAA,EAAE,CAACC,OAAH,GAAa,EAAb;;AACAD,MAAAA,EAAE,CAACC,OAAH,CAAWT,GAAX,GAAiB,UAAAC,SAAS,EAAI;AAC5B,QAAA,KAAI,CAACD,GAAL,CAASC,SAAT,EAAoBC,UAApB;AACD,OAFD;;AAIAM,MAAAA,EAAE,CAACC,OAAH,CAAWT,GAAX,CAAea,UAAf;AACD,KAVD,MAWK;AACH,UAAIL,EAAE,CAACM,MAAH,CAAUhB,SAAV,KAAwB,KAAK,CAAjC,EAAoC;AAClC,aAAKA,SAAL,GAAiBU,EAAE,CAACM,MAAH,CAAUhB,SAA3B;AACD;;AAEDU,MAAAA,EAAE,CAACC,OAAH,GAAa,KAAKV,OAAlB;AAEAH,MAAAA,UAAU,CAACY,EAAD,EAAK,WAAL,EAAkB;AAAA,eAAM,KAAI,CAACV,SAAX;AAAA,OAAlB,EAAwC,UAAAiB,GAAG,EAAI;AAAE,QAAA,KAAI,CAACjB,SAAL,GAAiBiB,GAAjB;AAAsB,OAAvE,CAAV;;AAEA,UAAI,KAAKC,WAAL,KAAqB,IAAzB,EAA+B;AAC7BP,QAAAA,OAAO,KAAK,KAAK,CAAjB,IAAsB,KAAKT,GAAL,CAASS,OAAT,CAAtB;AACD,OAFD,MAGK;AACH,aAAKT,GAAL,CAASS,OAAO,IAAId,aAApB;AACD;AACF;AACF;AA/CA,CAHgC,CAAnC;AAqDA,eAAeE,MAAf","sourcesContent":["import defineReactivePlugin from './utils/private/define-reactive-plugin.js'\nimport materialIcons from '../icon-set/material-icons.js'\nimport { injectProp } from './utils/private/inject-obj-prop.js'\n\nconst Plugin = defineReactivePlugin({\n  iconMapFn: null,\n  __icons: {}\n}, {\n  set (setObject, ssrContext) {\n    const def = { ...setObject, rtl: setObject.rtl === true }\n\n    if (__QUASAR_SSR_SERVER__) {\n      if (ssrContext === void 0) {\n        console.error('SSR ERROR: second param required: Quasar.iconSet.set(iconSet, ssrContext)')\n        return\n      }\n\n      def.set = ssrContext.$q.iconSet.set\n      Object.assign(ssrContext.$q.iconSet, def)\n    }\n    else {\n      def.set = Plugin.set\n      Object.assign(Plugin.__icons, def)\n    }\n  },\n\n  install ({ $q, iconSet, ssrContext }) {\n    if (__QUASAR_SSR_SERVER__) {\n      const initialSet = iconSet || materialIcons\n\n      $q.iconMapFn = ssrContext.$q.config.iconMapFn || this.iconMapFn || null\n      $q.iconSet = {}\n      $q.iconSet.set = setObject => {\n        this.set(setObject, ssrContext)\n      }\n\n      $q.iconSet.set(initialSet)\n    }\n    else {\n      if ($q.config.iconMapFn !== void 0) {\n        this.iconMapFn = $q.config.iconMapFn\n      }\n\n      $q.iconSet = this.__icons\n\n      injectProp($q, 'iconMapFn', () => this.iconMapFn, val => { this.iconMapFn = val })\n\n      if (this.__installed === true) {\n        iconSet !== void 0 && this.set(iconSet)\n      }\n      else {\n        this.set(iconSet || materialIcons)\n      }\n    }\n  }\n})\n\nexport default Plugin\n"]}]}